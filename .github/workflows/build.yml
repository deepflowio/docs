# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build CI

on:
  push:
    branches: 
      - main
      - Merge-docs
      - test-branch
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ref:
        description: "Why trigger?"
        required: true 
        type: string
        
env:
  IMAGE: "docs"

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: 
        - 12.x
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v2.2.1
      with:
        version: 6

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: docs-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          docs-${{ runner.os }}-pnpm-store-

    - name: Node build
      shell: bash
      run: |
        echo pwd
        pnpm install
        pnpm run build
        node copy-file.js

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to ALIYUN Docker Registry
      uses: docker/login-action@v2
      with:
        registry: "${{ secrets.REGISTRY_ALIYUN_ADDR }}"
        username: "${{ secrets.REGISTRY_ALIYUN_USER }}" 
        password: "${{ secrets.REGISTRY_PASS }}"

    - name: set env
      run: |
        echo "IMAGE_TAG_PREFIX=${{ github.ref_name }}"|sed 's|main|latest|' >> $GITHUB_ENV
        
    - name: Build and push docs image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          "${{ secrets.REGISTRY_ALIYUN_ADDR }}/deepservice/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ github.run_id }}-${{ github.run_attempt }}"
          "${{ secrets.REGISTRY_ALIYUN_ADDR }}/deepservice/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"

    - name: template
      if: ${{ github.event_name == 'pull_request' }}
      shell: bash
      run: |
         echo "TEMPLATE=red" >> $GITHUB_ENV

    - name: template
      if: ${{ github.event_name == 'push' }}
      shell: bash
      run: |
         echo "TEMPLATE=green" >> $GITHUB_ENV

    - uses: aliyun/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ALIYUN_ACK_ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ALIYUN_ACK_ACCESS_KEY_SECRET }}"
        cluster-id: "${{ secrets.ALIYUN_ACK_CLUSTER_ID }}"

    - name: info
      shell: bash
      run: |
        curl -X POST -H "Content-Type: application/json"   -d  \
        '{"msg_type":"interactive","card":
        {
          "config": {
            "wide_screen_mode": true
          },
          "elements": [
            {
              "tag": "div",
              "text": {
                "content": "docs分支： ${{ env.DOCS_REF }}\n镜像tag：${{ github.run_id }}-${{ github.run_attempt }}\nmain分支自动更新到测试环境\n更新命令：\nkubectl set image -n deepservice-test deployment deepservice-docs deepservice-docs=${{ secrets.REGISTRY_ALIYUN_ADDR }}/deepservice/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ github.run_id }}-${{ github.run_attempt }}",
                "tag": "lark_md"
              }
            }
          ],
          "header": {
            "template": "${{ env.TEMPLATE }}",
            "title": {
              "content": "👻DeepFlow (Community)-docs ${{ github.event_name }} 事件",
              "tag": "plain_text"
            }
          }
        }
        }' \
        ${{ secrets.FEISHU_ROBOT }}

    - name: update
      if: ${{ github.event.pull_request.head.ref == 'main' && github.event.pull_request.merged == true }}
      shell: bash
      run: |
        kubectl set image -n deepservice-test deployment deepservice-docs deepservice-docs=${{ secrets.REGISTRY_ALIYUN_ADDR }}/deepservice/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ github.run_id }}-${{ github.run_attempt }}